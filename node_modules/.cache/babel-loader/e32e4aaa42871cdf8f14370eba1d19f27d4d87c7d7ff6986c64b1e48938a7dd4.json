{"ast":null,"code":"/**\n * Tournament Data Loader\n * Centralized utility for loading tournament data from the organized file structure\n */\n\n// Import tournament info\nimport copa50tinha2025Info from './tournaments/copa50tinha2025/info';\nimport copaLillico2024Info from './tournaments/copaLillico2024/info';\n\n// Import tournament calendars\nimport { calendarData as copa50tinha2025Calendar } from './tournaments/copa50tinha2025/calendar';\n\n// Import tournament matches\nimport { matchesData as copa50tinha2025Matches } from './tournaments/copa50tinha2025/matches';\nimport copaLillico2024Matches from './tournaments/copaLillico2024/matches';\n\n// Import tournament rules\nimport { rulesData as copa50tinha2025Rules } from './tournaments/copa50tinha2025/rules';\n\n// Import tournament standings\nimport { getStandings as getCopa50tinha2025Standings, getStandingsLastUpdated as getCopa50tinha2025StandingsLastUpdated } from './tournaments/copa50tinha2025/standings';\n\n// Import tournament top scorers\nimport { getTopScorers as getCopa50tinha2025TopScorers, getTopScorersLastUpdated as getCopa50tinha2025TopScorersLastUpdated } from './tournaments/copa50tinha2025/scorers';\n\n/**\n * Get all tournament information\n * @returns {Array} Array of tournament info objects\n */\nexport const getAllTournaments = () => {\n  return [copa50tinha2025Info, copaLillico2024Info];\n};\n\n/**\n * Get tournament information by ID\n * @param {number} id - Tournament ID\n * @returns {Object|null} Tournament info object or null if not found\n */\nexport const getTournamentById = id => {\n  const tournaments = getAllTournaments();\n  return tournaments.find(tournament => tournament.id === id) || null;\n};\n\n/**\n * Get tournament calendar by tournament ID\n * @param {number} tournamentId - Tournament ID\n * @returns {Array|null} Tournament calendar data or null if not found\n */\nexport const getTournamentCalendar = tournamentId => {\n  switch (tournamentId) {\n    case 1:\n      // Copa 50tinha 2025\n      return copa50tinha2025Calendar;\n    default:\n      return null;\n  }\n};\n\n/**\n * Get tournament rules by tournament ID\n * @param {number} tournamentId - Tournament ID\n * @returns {Object|null} Tournament rules data or null if not found\n */\nexport const getTournamentRules = tournamentId => {\n  switch (tournamentId) {\n    case 1:\n      // Copa 50tinha 2025\n      return copa50tinha2025Rules;\n    default:\n      return null;\n  }\n};\n\n/**\n * Get all matches across all tournaments\n * @returns {Array} Array of all match objects\n */\nexport const getAllMatches = () => {\n  return [...copa50tinha2025Matches, ...copaLillico2024Matches];\n};\n\n/**\n * Get matches by tournament ID\n * @param {number} tournamentId - Tournament ID\n * @returns {Array} Array of match objects for the specified tournament\n */\nexport const getMatchesByTournament = tournamentId => {\n  const allMatches = getAllMatches();\n  return allMatches.filter(match => match.tournamentId === tournamentId);\n};\n\n/**\n * Get upcoming matches\n * @param {number} [limit=3] - Maximum number of matches to return\n * @returns {Array} Array of upcoming match objects\n */\nexport const getUpcomingMatches = (limit = 3) => {\n  const allMatches = getAllMatches();\n  return allMatches.filter(match => match.status === 'upcoming').sort((a, b) => {\n    // Sort by date (ascending)\n    const dateA = new Date(a.date.split('/').reverse().join('/'));\n    const dateB = new Date(b.date.split('/').reverse().join('/'));\n    return dateA - dateB;\n  }).slice(0, limit);\n};\n\n/**\n * Get recent matches\n * @param {number} [limit=3] - Maximum number of matches to return\n * @returns {Array} Array of recent match objects\n */\nexport const getRecentMatches = (limit = 3) => {\n  const allMatches = getAllMatches();\n  return allMatches.filter(match => match.status === 'completed' && (match.homeTeam === 'Classe FC' || match.awayTeam === 'Classe FC')).sort((a, b) => {\n    // Sort by date (descending)\n    const dateA = new Date(a.date.split('/').reverse().join('/'));\n    const dateB = new Date(b.date.split('/').reverse().join('/'));\n    return dateB - dateA;\n  }).slice(0, limit);\n};\n\n/**\n * Filter tournaments by status\n * @param {string} status - Tournament status ('active', 'upcoming', 'completed', or 'all')\n * @returns {Array} Array of filtered tournament info objects\n */\nexport const filterTournamentsByStatus = status => {\n  const tournaments = getAllTournaments();\n  if (status === 'all' || status === 'todos') {\n    return tournaments;\n  }\n  return tournaments.filter(tournament => tournament.status === status);\n};\n\n/**\n * Helper function to get team logo\n * @param {string} teamName - Team name\n * @returns {string} Path to team logo\n */\nexport const getTeamLogo = teamName => {\n  if (teamName === 'Classe FC') {\n    return '/images/logo.svg';\n  } else {\n    return '/images/match-logos/generic.png';\n  }\n};\n\n/**\n * Get standings for a tournament\n * @param {number} tournamentId - Tournament ID\n * @returns {Object|null} Standings data or null if not found\n */\nexport const getStandings = tournamentId => {\n  switch (tournamentId) {\n    case 1:\n      // Copa 50tinha 2025\n      return getCopa50tinha2025Standings();\n    default:\n      return null;\n  }\n};\n\n/**\n * Get last updated timestamp for standings\n * @param {number} tournamentId - Tournament ID\n * @returns {number|null} Last updated timestamp or null if not found\n */\nexport const getStandingsLastUpdated = tournamentId => {\n  switch (tournamentId) {\n    case 1:\n      // Copa 50tinha 2025\n      return getCopa50tinha2025StandingsLastUpdated();\n    default:\n      return null;\n  }\n};\n\n/**\n * Get top scorers for a tournament\n * @param {number} tournamentId - Tournament ID\n * @returns {Array|null} Top scorers data or null if not found\n */\nexport const getTopScorers = tournamentId => {\n  switch (tournamentId) {\n    case 1:\n      // Copa 50tinha 2025\n      return getCopa50tinha2025TopScorers();\n    default:\n      return null;\n  }\n};\n\n/**\n * Get last updated timestamp for top scorers\n * @param {number} tournamentId - Tournament ID\n * @returns {string|null} Last updated timestamp or null if not found\n */\nexport const getTopScorersLastUpdated = tournamentId => {\n  switch (tournamentId) {\n    case 1:\n      // Copa 50tinha 2025\n      return getCopa50tinha2025TopScorersLastUpdated();\n    default:\n      return null;\n  }\n};","map":{"version":3,"names":["copa50tinha2025Info","copaLillico2024Info","calendarData","copa50tinha2025Calendar","matchesData","copa50tinha2025Matches","copaLillico2024Matches","rulesData","copa50tinha2025Rules","getStandings","getCopa50tinha2025Standings","getStandingsLastUpdated","getCopa50tinha2025StandingsLastUpdated","getTopScorers","getCopa50tinha2025TopScorers","getTopScorersLastUpdated","getCopa50tinha2025TopScorersLastUpdated","getAllTournaments","getTournamentById","id","tournaments","find","tournament","getTournamentCalendar","tournamentId","getTournamentRules","getAllMatches","getMatchesByTournament","allMatches","filter","match","getUpcomingMatches","limit","status","sort","a","b","dateA","Date","date","split","reverse","join","dateB","slice","getRecentMatches","homeTeam","awayTeam","filterTournamentsByStatus","getTeamLogo","teamName"],"sources":["/Users/ovandef/cfc2025/cfc2025/src/data/tournamentDataLoader.js"],"sourcesContent":["/**\n * Tournament Data Loader\n * Centralized utility for loading tournament data from the organized file structure\n */\n\n// Import tournament info\nimport copa50tinha2025Info from './tournaments/copa50tinha2025/info';\nimport copaLillico2024Info from './tournaments/copaLillico2024/info';\n\n// Import tournament calendars\nimport { calendarData as copa50tinha2025Calendar } from './tournaments/copa50tinha2025/calendar';\n\n// Import tournament matches\nimport { matchesData as copa50tinha2025Matches } from './tournaments/copa50tinha2025/matches';\nimport copaLillico2024Matches from './tournaments/copaLillico2024/matches';\n\n// Import tournament rules\nimport { rulesData as copa50tinha2025Rules } from './tournaments/copa50tinha2025/rules';\n\n// Import tournament standings\nimport { getStandings as getCopa50tinha2025Standings, getStandingsLastUpdated as getCopa50tinha2025StandingsLastUpdated } from './tournaments/copa50tinha2025/standings';\n\n// Import tournament top scorers\nimport { getTopScorers as getCopa50tinha2025TopScorers, getTopScorersLastUpdated as getCopa50tinha2025TopScorersLastUpdated } from './tournaments/copa50tinha2025/scorers';\n\n/**\n * Get all tournament information\n * @returns {Array} Array of tournament info objects\n */\nexport const getAllTournaments = () => {\n  return [copa50tinha2025Info, copaLillico2024Info];\n};\n\n/**\n * Get tournament information by ID\n * @param {number} id - Tournament ID\n * @returns {Object|null} Tournament info object or null if not found\n */\nexport const getTournamentById = (id) => {\n  const tournaments = getAllTournaments();\n  return tournaments.find(tournament => tournament.id === id) || null;\n};\n\n/**\n * Get tournament calendar by tournament ID\n * @param {number} tournamentId - Tournament ID\n * @returns {Array|null} Tournament calendar data or null if not found\n */\nexport const getTournamentCalendar = (tournamentId) => {\n  switch (tournamentId) {\n    case 1: // Copa 50tinha 2025\n      return copa50tinha2025Calendar;\n    default:\n      return null;\n  }\n};\n\n/**\n * Get tournament rules by tournament ID\n * @param {number} tournamentId - Tournament ID\n * @returns {Object|null} Tournament rules data or null if not found\n */\nexport const getTournamentRules = (tournamentId) => {\n  switch (tournamentId) {\n    case 1: // Copa 50tinha 2025\n      return copa50tinha2025Rules;\n    default:\n      return null;\n  }\n};\n\n/**\n * Get all matches across all tournaments\n * @returns {Array} Array of all match objects\n */\nexport const getAllMatches = () => {\n  return [...copa50tinha2025Matches, ...copaLillico2024Matches];\n};\n\n/**\n * Get matches by tournament ID\n * @param {number} tournamentId - Tournament ID\n * @returns {Array} Array of match objects for the specified tournament\n */\nexport const getMatchesByTournament = (tournamentId) => {\n  const allMatches = getAllMatches();\n  return allMatches.filter(match => match.tournamentId === tournamentId);\n};\n\n/**\n * Get upcoming matches\n * @param {number} [limit=3] - Maximum number of matches to return\n * @returns {Array} Array of upcoming match objects\n */\nexport const getUpcomingMatches = (limit = 3) => {\n  const allMatches = getAllMatches();\n  return allMatches\n    .filter(match => match.status === 'upcoming')\n    .sort((a, b) => {\n      // Sort by date (ascending)\n      const dateA = new Date(a.date.split('/').reverse().join('/'));\n      const dateB = new Date(b.date.split('/').reverse().join('/'));\n      return dateA - dateB;\n    })\n    .slice(0, limit);\n};\n\n/**\n * Get recent matches\n * @param {number} [limit=3] - Maximum number of matches to return\n * @returns {Array} Array of recent match objects\n */\nexport const getRecentMatches = (limit = 3) => {\n  const allMatches = getAllMatches();\n  return allMatches\n    .filter(match => \n      match.status === 'completed' && \n      (match.homeTeam === 'Classe FC' || match.awayTeam === 'Classe FC')\n    )\n    .sort((a, b) => {\n      // Sort by date (descending)\n      const dateA = new Date(a.date.split('/').reverse().join('/'));\n      const dateB = new Date(b.date.split('/').reverse().join('/'));\n      return dateB - dateA;\n    })\n    .slice(0, limit);\n};\n\n/**\n * Filter tournaments by status\n * @param {string} status - Tournament status ('active', 'upcoming', 'completed', or 'all')\n * @returns {Array} Array of filtered tournament info objects\n */\nexport const filterTournamentsByStatus = (status) => {\n  const tournaments = getAllTournaments();\n  \n  if (status === 'all' || status === 'todos') {\n    return tournaments;\n  }\n  \n  return tournaments.filter(tournament => tournament.status === status);\n};\n\n/**\n * Helper function to get team logo\n * @param {string} teamName - Team name\n * @returns {string} Path to team logo\n */\nexport const getTeamLogo = (teamName) => {\n  if (teamName === 'Classe FC') {\n    return '/images/logo.svg';\n  } else {\n    return '/images/match-logos/generic.png';\n  }\n};\n\n/**\n * Get standings for a tournament\n * @param {number} tournamentId - Tournament ID\n * @returns {Object|null} Standings data or null if not found\n */\nexport const getStandings = (tournamentId) => {\n  switch (tournamentId) {\n    case 1: // Copa 50tinha 2025\n      return getCopa50tinha2025Standings();\n    default:\n      return null;\n  }\n};\n\n/**\n * Get last updated timestamp for standings\n * @param {number} tournamentId - Tournament ID\n * @returns {number|null} Last updated timestamp or null if not found\n */\nexport const getStandingsLastUpdated = (tournamentId) => {\n  switch (tournamentId) {\n    case 1: // Copa 50tinha 2025\n      return getCopa50tinha2025StandingsLastUpdated();\n    default:\n      return null;\n  }\n};\n\n/**\n * Get top scorers for a tournament\n * @param {number} tournamentId - Tournament ID\n * @returns {Array|null} Top scorers data or null if not found\n */\nexport const getTopScorers = (tournamentId) => {\n  switch (tournamentId) {\n    case 1: // Copa 50tinha 2025\n      return getCopa50tinha2025TopScorers();\n    default:\n      return null;\n  }\n};\n\n/**\n * Get last updated timestamp for top scorers\n * @param {number} tournamentId - Tournament ID\n * @returns {string|null} Last updated timestamp or null if not found\n */\nexport const getTopScorersLastUpdated = (tournamentId) => {\n  switch (tournamentId) {\n    case 1: // Copa 50tinha 2025\n      return getCopa50tinha2025TopScorersLastUpdated();\n    default:\n      return null;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}