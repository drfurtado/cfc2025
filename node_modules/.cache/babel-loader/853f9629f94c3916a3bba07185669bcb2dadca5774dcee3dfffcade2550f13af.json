{"ast":null,"code":"var _jsxFileName = \"/Users/ovandef/Documents/GitHub/cfc2025/src/pages/TimePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './TimePage.css';\n\n// Define position order outside the component for stability\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst positionOrder = ['Goleiro', 'Zagueiro', 'Lateral', 'Volante', 'Meia', 'Atacante'];\n\n// Helper function to create safe filenames from names\nconst createSafeFilename = name => {\n  if (!name) return '';\n  return name.toLowerCase().replace(/\\s+/g, '_') // Replace spaces with underscores\n  .replace(/[^a-z0-9_.-]/g, '') // Remove other special characters except underscore, dot, hyphen\n  .replace(/\\.+/g, '.') // Avoid multiple dots\n  + '.png'; // Assume PNG format\n};\nfunction TimePage() {\n  _s();\n  const [activeCategory, setActiveCategory] = useState('jogadores');\n  const [players, setPlayers] = useState([]);\n  const [staff, setStaff] = useState([]);\n  const [directors, setDirectors] = useState([]);\n  const [pastPlayers, setPastPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPerson, setSelectedPerson] = useState(null);\n  const [showLightbox, setShowLightbox] = useState(false);\n\n  // Function to sort players by position according to positionOrder\n  const sortPlayersByPosition = useCallback(playersToSort => {\n    return [...playersToSort].sort((a, b) => {\n      const posA = a.position.toLowerCase();\n      const posB = b.position.toLowerCase();\n\n      // Get index of position in positionOrder (case insensitive)\n      const indexA = positionOrder.findIndex(pos => posA.includes(pos.toLowerCase()));\n      const indexB = positionOrder.findIndex(pos => posB.includes(pos.toLowerCase()));\n\n      // If both positions are found in positionOrder, sort by their order\n      if (indexA !== -1 && indexB !== -1) {\n        return indexA - indexB;\n      }\n\n      // If only one position is found, prioritize it\n      if (indexA !== -1) return -1;\n      if (indexB !== -1) return 1;\n\n      // If neither is found, sort alphabetically\n      return posA.localeCompare(posB);\n    });\n  }, []); // Dependency array is empty as positionOrder is now a constant\n\n  // Group players by position\n  const groupPlayersByPosition = useCallback(playersToGroup => {\n    const groups = {};\n    playersToGroup.forEach(player => {\n      let position = player.position;\n\n      // Standardize position names\n      for (const pos of positionOrder) {\n        if (position.toLowerCase().includes(pos.toLowerCase())) {\n          position = pos + 's'; // Pluralize\n          break;\n        }\n      }\n\n      // Default group if no match\n      if (!positionOrder.some(pos => position.toLowerCase().includes(pos.toLowerCase()))) {\n        position = 'Outros';\n      }\n\n      // Create group if it doesn't exist\n      if (!groups[position]) {\n        groups[position] = [];\n      }\n      groups[position].push(player);\n    });\n    return groups;\n  }, []); // Empty dependency array\n\n  // Group directors by role\n  const groupDirectorsByRole = useCallback(directorsToGroup => {\n    const groups = {\n      'Presidência': [],\n      'Conselheiros': []\n    };\n    directorsToGroup.forEach(director => {\n      if (director.role.toLowerCase().includes('presidente')) {\n        groups['Presidência'].push(director);\n      } else {\n        groups['Conselheiros'].push(director);\n      }\n    });\n    return groups;\n  }, []); // Empty dependency array\n\n  // Function to open lightbox\n  const openLightbox = person => {\n    setSelectedPerson(person);\n    setShowLightbox(true);\n    document.body.style.overflow = 'hidden'; // Prevent scrolling when lightbox is open\n  };\n\n  // Function to close lightbox\n  const closeLightbox = () => {\n    setShowLightbox(false);\n    setSelectedPerson(null);\n    document.body.style.overflow = 'auto'; // Re-enable scrolling\n  };\n\n  // Fetch data from CSV files\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch players from CSV\n        const playersResponse = await fetch('/players.csv');\n        const playersText = await playersResponse.text();\n\n        // Parse players CSV\n        const playerLines = playersText.split('\\n').filter(line => line.trim() !== '');\n        const parsedPlayers = playerLines.map((line, index) => {\n          let name, position;\n          if (line.includes(',')) {\n            [name, position] = line.split(',').map(item => item.trim());\n          } else {\n            // If no comma, try to extract position as the last word\n            const parts = line.trim().split(/\\s+/);\n            position = parts.pop(); // Last word is position\n            name = parts.join(' '); // Rest is name\n          }\n          return {\n            id: index + 1,\n            name: name || `Jogador ${index + 1}`,\n            position: position || 'Campo',\n            // Use player headshots from the new folder, with fallback to silhouette\n            image: `/images/team/players/${createSafeFilename(name)}`\n          };\n        });\n\n        // Sort players by position\n        const sortedPlayers = sortPlayersByPosition(parsedPlayers);\n        setPlayers(sortedPlayers);\n\n        // Fetch staff from CSV\n        const staffResponse = await fetch('/comissao.csv');\n        const staffText = await staffResponse.text();\n\n        // Parse staff CSV\n        const staffLines = staffText.split('\\n').filter(line => line.trim() !== '');\n        const parsedStaff = staffLines.map((line, index) => {\n          let name, role;\n\n          // Check if the line is likely a header (common pattern: contains 'nome' or 'cargo')\n          if (index === 0 && (line.toLowerCase().includes('nome') || line.toLowerCase().includes('cargo'))) {\n            return null; // Skip header row\n          }\n          if (line.includes(',')) {\n            [name, role] = line.split(',').map(item => item.trim());\n          } else {\n            name = line.trim();\n            role = 'Comissão Técnica';\n          }\n          return {\n            id: index + 1,\n            name: name || `Staff ${index + 1}`,\n            role: role || 'Comissão Técnica',\n            // Generate image path based on name\n            image: `/images/team/staff/${createSafeFilename(name)}`\n          };\n        }).filter(Boolean); // Remove null entries (skipped header)\n\n        setStaff(parsedStaff);\n\n        // Fetch directors from CSV\n        const directorsResponse = await fetch('/diretoria.csv');\n        const directorsText = await directorsResponse.text();\n\n        // Parse directors CSV\n        const directorLines = directorsText.split('\\n').filter(line => line.trim() !== '');\n        const parsedDirectors = directorLines.map((line, index) => {\n          let name, role;\n\n          // Check if the line is likely a header\n          if (index === 0 && (line.toLowerCase().includes('nome') || line.toLowerCase().includes('cargo') || line.toLowerCase().includes('diretor'))) {\n            return null; // Skip header row\n          }\n          if (line.includes(',')) {\n            [name, role] = line.split(',').map(item => item.trim());\n          } else {\n            name = line.trim();\n            role = 'Diretor';\n          }\n          return {\n            id: index + 1,\n            name: name || `Diretor ${index + 1}`,\n            role: role || 'Diretor',\n            // Generate image path based on name\n            image: `/images/team/directors/${createSafeFilename(name)}`\n          };\n        }).filter(Boolean); // Remove null entries\n\n        // Sort directors to ensure president comes first\n        const sortedDirectors = [...parsedDirectors].sort((a, b) => {\n          if (a.role.toLowerCase().includes('presidente') && !a.role.toLowerCase().includes('vice')) return -1;\n          if (b.role.toLowerCase().includes('presidente') && !b.role.toLowerCase().includes('vice')) return 1;\n          if (a.role.toLowerCase().includes('vice')) return 0;\n          return 0;\n        });\n        setDirectors(sortedDirectors);\n\n        // Fetch past players from CSV\n        try {\n          const pastPlayersResponse = await fetch('/jogadores-antigos.csv');\n          const pastPlayersText = await pastPlayersResponse.text();\n\n          // Parse past players CSV\n          const pastPlayerLines = pastPlayersText.split('\\n').filter(line => line.trim() !== '');\n          const parsedPastPlayers = pastPlayerLines.map((line, index) => ({\n            id: index + 1,\n            name: line.trim()\n          }));\n          setPastPlayers(parsedPastPlayers);\n        } catch (error) {\n          console.error('Error loading past players:', error);\n          setPastPlayers([]);\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n        // Set default data if CSV loading fails\n        setPlayers([]);\n        setStaff([]);\n        setDirectors([]);\n        setPastPlayers([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [sortPlayersByPosition]); // Keep sortPlayersByPosition here as it's defined outside but used inside\n\n  const playerGroups = groupPlayersByPosition(players); // Call grouping functions here\n  const directorGroups = groupDirectorsByRole(directors);\n\n  // Image error handler\n  const handleImageError = e => {\n    e.target.onerror = null; // Prevent infinite loop if fallback fails\n    e.target.src = '/images/player-silhouette.svg'; // Fallback to silhouette\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-spinner fa-spin mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), \" Carregando informa\\xE7\\xF5es do time...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-categories\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-button ${activeCategory === 'jogadores' ? 'active' : ''}`,\n          onClick: () => setActiveCategory('jogadores'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-futbol mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), \" Jogadores\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-button ${activeCategory === 'comissao' ? 'active' : ''}`,\n          onClick: () => setActiveCategory('comissao'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-clipboard mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), \" Comiss\\xE3o T\\xE9cnica\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-button ${activeCategory === 'diretoria' ? 'active' : ''}`,\n          onClick: () => setActiveCategory('diretoria'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-user-tie mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), \" Diretoria\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-button ${activeCategory === 'ex-jogadores' ? 'active' : ''}`,\n          onClick: () => setActiveCategory('ex-jogadores'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-history mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), \" Ex-Jogadores\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), activeCategory === 'jogadores' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"players-section\",\n        children: Object.entries(playerGroups).map(([position, positionPlayers]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"position-title\",\n            children: position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"players-grid\",\n            children: positionPlayers.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-card\",\n              onClick: () => openLightbox(player),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: player.image,\n                  alt: player.name,\n                  onError: handleImageError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: player.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"player-position\",\n                  children: player.position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 23\n              }, this)]\n            }, player.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this)]\n        }, position, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this), activeCategory === 'comissao' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"staff-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"position-title\",\n          children: \"Comiss\\xE3o T\\xE9cnica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"staff-grid\",\n          children: staff.map(staffMember => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"staff-card\",\n            onClick: () => openLightbox(staffMember),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"staff-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: staffMember.image,\n                alt: staffMember.name,\n                onError: handleImageError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"staff-card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: staffMember.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"staff-position\",\n                children: staffMember.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this)]\n          }, staffMember.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), activeCategory === 'diretoria' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-section\",\n        children: Object.entries(directorGroups).map(([role, roleDirectors]) => roleDirectors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"position-title\",\n            children: role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-grid\",\n            children: roleDirectors.map(director => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"board-card\",\n              onClick: () => openLightbox(director),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"board-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: director.image,\n                  alt: director.name,\n                  onError: handleImageError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"board-card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: director.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"board-position\",\n                  children: director.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 25\n              }, this)]\n            }, director.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 19\n          }, this)]\n        }, role, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), activeCategory === 'ex-jogadores' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"past-players-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"position-title\",\n          children: \"Ex-Jogadores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"past-players-grid\",\n          children: pastPlayers.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"past-player-card\",\n            onClick: () => openLightbox(player),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"past-player-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: player.image,\n                alt: player.name,\n                onError: handleImageError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"past-player-card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: player.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"past-player-position\",\n                children: player.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this), showLightbox && selectedPerson && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lightbox-overlay\",\n        onClick: closeLightbox,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lightbox-content\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"lightbox-close\",\n            onClick: closeLightbox,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lightbox-image-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedPerson.image,\n              alt: selectedPerson.name,\n              onError: handleImageError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lightbox-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedPerson.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedPerson.position || selectedPerson.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n}\n_s(TimePage, \"EWLIX4FxjaBJdVI4H9+XwbVqpw4=\");\n_c = TimePage;\nexport default TimePage;\nvar _c;\n$RefreshReg$(_c, \"TimePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","positionOrder","createSafeFilename","name","toLowerCase","replace","TimePage","_s","activeCategory","setActiveCategory","players","setPlayers","staff","setStaff","directors","setDirectors","pastPlayers","setPastPlayers","loading","setLoading","selectedPerson","setSelectedPerson","showLightbox","setShowLightbox","sortPlayersByPosition","playersToSort","sort","a","b","posA","position","posB","indexA","findIndex","pos","includes","indexB","localeCompare","groupPlayersByPosition","playersToGroup","groups","forEach","player","some","push","groupDirectorsByRole","directorsToGroup","director","role","openLightbox","person","document","body","style","overflow","closeLightbox","fetchData","playersResponse","fetch","playersText","text","playerLines","split","filter","line","trim","parsedPlayers","map","index","item","parts","pop","join","id","image","sortedPlayers","staffResponse","staffText","staffLines","parsedStaff","Boolean","directorsResponse","directorsText","directorLines","parsedDirectors","sortedDirectors","pastPlayersResponse","pastPlayersText","pastPlayerLines","parsedPastPlayers","error","console","playerGroups","directorGroups","handleImageError","e","target","onerror","src","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","entries","positionPlayers","alt","onError","staffMember","roleDirectors","length","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/ovandef/Documents/GitHub/cfc2025/src/pages/TimePage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './TimePage.css';\n\n// Define position order outside the component for stability\nconst positionOrder = [\n  'Goleiro',\n  'Zagueiro',\n  'Lateral',\n  'Volante',\n  'Meia',\n  'Atacante'\n];\n\n// Helper function to create safe filenames from names\nconst createSafeFilename = (name) => {\n  if (!name) return '';\n  return name\n    .toLowerCase()\n    .replace(/\\s+/g, '_') // Replace spaces with underscores\n    .replace(/[^a-z0-9_.-]/g, '') // Remove other special characters except underscore, dot, hyphen\n    .replace(/\\.+/g, '.') // Avoid multiple dots\n    + '.png'; // Assume PNG format\n};\n\nfunction TimePage() {\n  const [activeCategory, setActiveCategory] = useState('jogadores');\n  const [players, setPlayers] = useState([]);\n  const [staff, setStaff] = useState([]);\n  const [directors, setDirectors] = useState([]);\n  const [pastPlayers, setPastPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPerson, setSelectedPerson] = useState(null);\n  const [showLightbox, setShowLightbox] = useState(false);\n\n  // Function to sort players by position according to positionOrder\n  const sortPlayersByPosition = useCallback((playersToSort) => {\n    return [...playersToSort].sort((a, b) => {\n      const posA = a.position.toLowerCase();\n      const posB = b.position.toLowerCase();\n\n      // Get index of position in positionOrder (case insensitive)\n      const indexA = positionOrder.findIndex(pos =>\n        posA.includes(pos.toLowerCase())\n      );\n      const indexB = positionOrder.findIndex(pos =>\n        posB.includes(pos.toLowerCase())\n      );\n\n      // If both positions are found in positionOrder, sort by their order\n      if (indexA !== -1 && indexB !== -1) {\n        return indexA - indexB;\n      }\n\n      // If only one position is found, prioritize it\n      if (indexA !== -1) return -1;\n      if (indexB !== -1) return 1;\n\n      // If neither is found, sort alphabetically\n      return posA.localeCompare(posB);\n    });\n  }, []); // Dependency array is empty as positionOrder is now a constant\n\n  // Group players by position\n  const groupPlayersByPosition = useCallback((playersToGroup) => {\n    const groups = {};\n\n    playersToGroup.forEach(player => {\n      let position = player.position;\n\n      // Standardize position names\n      for (const pos of positionOrder) {\n        if (position.toLowerCase().includes(pos.toLowerCase())) {\n          position = pos + 's'; // Pluralize\n          break;\n        }\n      }\n\n      // Default group if no match\n      if (!positionOrder.some(pos => position.toLowerCase().includes(pos.toLowerCase()))) {\n        position = 'Outros';\n      }\n\n      // Create group if it doesn't exist\n      if (!groups[position]) {\n        groups[position] = [];\n      }\n\n      groups[position].push(player);\n    });\n\n    return groups;\n  }, []); // Empty dependency array\n\n  // Group directors by role\n  const groupDirectorsByRole = useCallback((directorsToGroup) => {\n    const groups = {\n      'Presidência': [],\n      'Conselheiros': []\n    };\n\n    directorsToGroup.forEach(director => {\n      if (director.role.toLowerCase().includes('presidente')) {\n        groups['Presidência'].push(director);\n      } else {\n        groups['Conselheiros'].push(director);\n      }\n    });\n\n    return groups;\n  }, []); // Empty dependency array\n\n  // Function to open lightbox\n  const openLightbox = (person) => {\n    setSelectedPerson(person);\n    setShowLightbox(true);\n    document.body.style.overflow = 'hidden'; // Prevent scrolling when lightbox is open\n  };\n\n  // Function to close lightbox\n  const closeLightbox = () => {\n    setShowLightbox(false);\n    setSelectedPerson(null);\n    document.body.style.overflow = 'auto'; // Re-enable scrolling\n  };\n\n  // Fetch data from CSV files\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch players from CSV\n        const playersResponse = await fetch('/players.csv');\n        const playersText = await playersResponse.text();\n\n        // Parse players CSV\n        const playerLines = playersText.split('\\n').filter(line => line.trim() !== '');\n        const parsedPlayers = playerLines.map((line, index) => {\n          let name, position;\n\n          if (line.includes(',')) {\n            [name, position] = line.split(',').map(item => item.trim());\n          } else {\n            // If no comma, try to extract position as the last word\n            const parts = line.trim().split(/\\s+/);\n            position = parts.pop(); // Last word is position\n            name = parts.join(' '); // Rest is name\n          }\n\n          return {\n            id: index + 1,\n            name: name || `Jogador ${index + 1}`,\n            position: position || 'Campo',\n            // Use player headshots from the new folder, with fallback to silhouette\n            image: `/images/team/players/${createSafeFilename(name)}` \n          };\n        });\n\n        // Sort players by position\n        const sortedPlayers = sortPlayersByPosition(parsedPlayers);\n        setPlayers(sortedPlayers);\n\n        // Fetch staff from CSV\n        const staffResponse = await fetch('/comissao.csv');\n        const staffText = await staffResponse.text();\n\n        // Parse staff CSV\n        const staffLines = staffText.split('\\n').filter(line => line.trim() !== '');\n        const parsedStaff = staffLines.map((line, index) => {\n          let name, role;\n\n          // Check if the line is likely a header (common pattern: contains 'nome' or 'cargo')\n          if (index === 0 && (line.toLowerCase().includes('nome') || line.toLowerCase().includes('cargo'))) {\n            return null; // Skip header row\n          }\n\n          if (line.includes(',')) { \n             [name, role] = line.split(',').map(item => item.trim());\n           } else {\n             name = line.trim();\n             role = 'Comissão Técnica';\n           }\n\n          return {\n            id: index + 1,\n            name: name || `Staff ${index + 1}`,\n            role: role || 'Comissão Técnica',\n            // Generate image path based on name\n            image: `/images/team/staff/${createSafeFilename(name)}` \n          };\n        }).filter(Boolean); // Remove null entries (skipped header)\n\n         setStaff(parsedStaff);\n\n        // Fetch directors from CSV\n        const directorsResponse = await fetch('/diretoria.csv');\n        const directorsText = await directorsResponse.text();\n\n        // Parse directors CSV\n        const directorLines = directorsText.split('\\n').filter(line => line.trim() !== '');\n        const parsedDirectors = directorLines.map((line, index) => {\n          let name, role;\n\n          // Check if the line is likely a header\n          if (index === 0 && (line.toLowerCase().includes('nome') || line.toLowerCase().includes('cargo') || line.toLowerCase().includes('diretor'))) {\n             return null; // Skip header row\n          }\n\n          if (line.includes(',')) {\n             [name, role] = line.split(',').map(item => item.trim());\n           } else {\n             name = line.trim();\n             role = 'Diretor';\n           }\n\n          return {\n            id: index + 1,\n            name: name || `Diretor ${index + 1}`,\n            role: role || 'Diretor',\n            // Generate image path based on name\n            image: `/images/team/directors/${createSafeFilename(name)}` \n          };\n        }).filter(Boolean); // Remove null entries\n\n         // Sort directors to ensure president comes first\n         const sortedDirectors = [...parsedDirectors].sort((a, b) => {\n          if (a.role.toLowerCase().includes('presidente') && !a.role.toLowerCase().includes('vice')) return -1;\n          if (b.role.toLowerCase().includes('presidente') && !b.role.toLowerCase().includes('vice')) return 1;\n          if (a.role.toLowerCase().includes('vice')) return 0;\n          return 0;\n        });\n\n        setDirectors(sortedDirectors);\n\n        // Fetch past players from CSV\n        try {\n          const pastPlayersResponse = await fetch('/jogadores-antigos.csv');\n          const pastPlayersText = await pastPlayersResponse.text();\n\n          // Parse past players CSV\n          const pastPlayerLines = pastPlayersText.split('\\n').filter(line => line.trim() !== '');\n          const parsedPastPlayers = pastPlayerLines.map((line, index) => ({\n            id: index + 1,\n            name: line.trim()\n          }));\n\n          setPastPlayers(parsedPastPlayers);\n        } catch (error) {\n          console.error('Error loading past players:', error);\n          setPastPlayers([]);\n        }\n\n      } catch (error) {\n        console.error('Error loading data:', error);\n        // Set default data if CSV loading fails\n        setPlayers([]);\n        setStaff([]);\n        setDirectors([]);\n        setPastPlayers([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [sortPlayersByPosition]); // Keep sortPlayersByPosition here as it's defined outside but used inside\n\n  const playerGroups = groupPlayersByPosition(players); // Call grouping functions here\n  const directorGroups = groupDirectorsByRole(directors);\n\n  // Image error handler\n  const handleImageError = (e) => {\n    e.target.onerror = null; // Prevent infinite loop if fallback fails\n    e.target.src = '/images/player-silhouette.svg'; // Fallback to silhouette\n  };\n\n  if (loading) {\n    return (\n      <div className=\"team-page\">\n        <div className=\"container\">\n          <div className=\"loading\">\n            <i className=\"fas fa-spinner fa-spin mr-2\"></i> Carregando informações do time...\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"team-page\">\n      <div className=\"container\">\n        <div className=\"team-categories\">\n          <button \n            className={`category-button ${activeCategory === 'jogadores' ? 'active' : ''}`}\n            onClick={() => setActiveCategory('jogadores')}\n          >\n            <i className=\"fas fa-futbol mr-2\"></i> Jogadores\n          </button>\n          <button \n            className={`category-button ${activeCategory === 'comissao' ? 'active' : ''}`}\n            onClick={() => setActiveCategory('comissao')}\n          >\n            <i className=\"fas fa-clipboard mr-2\"></i> Comissão Técnica\n          </button>\n          <button \n            className={`category-button ${activeCategory === 'diretoria' ? 'active' : ''}`}\n            onClick={() => setActiveCategory('diretoria')}\n          >\n            <i className=\"fas fa-user-tie mr-2\"></i> Diretoria\n          </button>\n          <button \n            className={`category-button ${activeCategory === 'ex-jogadores' ? 'active' : ''}`}\n            onClick={() => setActiveCategory('ex-jogadores')}\n          >\n            <i className=\"fas fa-history mr-2\"></i> Ex-Jogadores\n          </button>\n        </div>\n\n        {activeCategory === 'jogadores' && (\n          <div className=\"players-section\">\n            {Object.entries(playerGroups).map(([position, positionPlayers]) => (\n              <div key={position} className=\"position-group\">\n                <h2 className=\"position-title\">{position}</h2>\n                <div className=\"players-grid\">\n                  {positionPlayers.map(player => (\n                    <div key={player.id} className=\"player-card\" onClick={() => openLightbox(player)}>\n                      <div className=\"player-image\">\n                        <img \n                          src={player.image} \n                          alt={player.name} \n                          onError={handleImageError}\n                        />\n                      </div>\n                      <div className=\"player-card-body\">\n                        <h3>{player.name}</h3>\n                        <p className=\"player-position\">{player.position}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {activeCategory === 'comissao' && (\n          <div className=\"staff-section\">\n            <h2 className=\"position-title\">Comissão Técnica</h2>\n            <div className=\"staff-grid\">\n              {staff.map(staffMember => (\n                <div key={staffMember.id} className=\"staff-card\" onClick={() => openLightbox(staffMember)}>\n                  <div className=\"staff-image\">\n                    <img \n                      src={staffMember.image} \n                      alt={staffMember.name} \n                      onError={handleImageError}\n                    />\n                  </div>\n                  <div className=\"staff-card-body\">\n                    <h3>{staffMember.name}</h3>\n                    <p className=\"staff-position\">{staffMember.role}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {activeCategory === 'diretoria' && (\n          <div className=\"board-section\">\n            {Object.entries(directorGroups).map(([role, roleDirectors]) => (\n              roleDirectors.length > 0 && (\n                <div key={role} className=\"position-group\">\n                  <h2 className=\"position-title\">{role}</h2>\n                  <div className=\"board-grid\">\n                    {roleDirectors.map(director => (\n                      <div key={director.id} className=\"board-card\" onClick={() => openLightbox(director)}>\n                        <div className=\"board-image\">\n                          <img \n                            src={director.image} \n                            alt={director.name} \n                            onError={handleImageError}\n                          />\n                        </div>\n                        <div className=\"board-card-body\">\n                          <h3>{director.name}</h3>\n                          <p className=\"board-position\">{director.role}</p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )\n            ))}\n          </div>\n        )}\n\n        {activeCategory === 'ex-jogadores' && (\n          <div className=\"past-players-section\">\n            <h2 className=\"position-title\">Ex-Jogadores</h2>\n            <div className=\"past-players-grid\">\n              {pastPlayers.map(player => (\n                <div key={player.id} className=\"past-player-card\" onClick={() => openLightbox(player)}>\n                  <div className=\"past-player-image\">\n                    <img \n                      src={player.image} \n                      alt={player.name} \n                      onError={handleImageError}\n                    />\n                  </div>\n                  <div className=\"past-player-card-body\">\n                    <h3>{player.name}</h3>\n                    <p className=\"past-player-position\">{player.position}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Lightbox Modal */}\n        {showLightbox && selectedPerson && (\n          <div className=\"lightbox-overlay\" onClick={closeLightbox}>\n            <div className=\"lightbox-content\" onClick={(e) => e.stopPropagation()}>\n              <button className=\"lightbox-close\" onClick={closeLightbox}>\n                <i className=\"fas fa-times\"></i>\n              </button>\n              <div className=\"lightbox-image-container\">\n                <img \n                  src={selectedPerson.image} \n                  alt={selectedPerson.name} \n                  onError={handleImageError}\n                />\n              </div>\n              <div className=\"lightbox-details\">\n                <h2>{selectedPerson.name}</h2>\n                <p>{selectedPerson.position || selectedPerson.role}</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TimePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}