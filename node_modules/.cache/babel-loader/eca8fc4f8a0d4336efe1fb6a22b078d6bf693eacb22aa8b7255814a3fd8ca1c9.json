{"ast":null,"code":"var _jsxFileName = \"/Users/ovandef/Documents/GitHub/cfc2025/src/components/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './AudioPlayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(0.5);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const audioRef = useRef(null);\n  const progressBarRef = useRef(null);\n\n  // Updated playlist with all songs from acrotona album\n  const songs = [{\n    title: \"Bola a rolar\",\n    artist: \"Acrotona\",\n    src: \"/audio/albums/acrotona/Bola%20a%20rolar.mp3\"\n  }, {\n    title: \"Coração Tricolor\",\n    artist: \"Acrotona\",\n    src: \"/audio/albums/acrotona/Cora%C3%A7%C3%A3o%20Tricolor.mp3\"\n  }, {\n    title: \"1990\",\n    artist: \"Acrotona\",\n    src: \"/audio/albums/acrotona/1990.mp3\"\n  }, {\n    title: \"Campeões da Vila\",\n    artist: \"Acrotona\",\n    src: \"/audio/albums/acrotona/Campe%C3%B5es%20da%20Vila.mp3\"\n  }, {\n    title: \"Gritos da Torcida\",\n    artist: \"Acrotona\",\n    src: \"/audio/albums/acrotona/Gritos%20da%20Torcida.mp3\"\n  }, {\n    title: \"Mais Que Um Jogo\",\n    artist: \"Acrotona\",\n    src: \"/audio/albums/acrotona/Mais%20Que%20Um%20Jogo.mp3\"\n  }, {\n    title: \"Nossa Engrenagem\",\n    artist: \"Acrotona\",\n    src: \"/audio/albums/acrotona/Nossa%20Engrenagem.mp3\"\n  }, {\n    title: \"Velha Guarda\",\n    artist: \"Acrotona\",\n    src: \"/audio/albums/acrotona/Velha%20Guarda.mp3\"\n  }];\n  const currentSong = songs[currentSongIndex];\n\n  // Monitor window width to auto-expand on narrow screens\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  useEffect(() => {\n    const audio = audioRef.current;\n    const setAudioData = () => {\n      setDuration(audio.duration);\n      setCurrentTime(audio.currentTime);\n    };\n    const setAudioTime = () => setCurrentTime(audio.currentTime);\n\n    // Add event listeners\n    audio.addEventListener('loadeddata', setAudioData);\n    audio.addEventListener('timeupdate', setAudioTime);\n\n    // Set volume\n    audio.volume = volume;\n\n    // Cleanup\n    return () => {\n      audio.removeEventListener('loadeddata', setAudioData);\n      audio.removeEventListener('timeupdate', setAudioTime);\n    };\n  }, [currentSongIndex, volume]);\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleProgress = e => {\n    const progressBar = progressBarRef.current;\n    const percent = e.nativeEvent.offsetX / progressBar.offsetWidth;\n    const newTime = percent * duration;\n    audioRef.current.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n  const handleVolumeChange = e => {\n    const newVolume = e.target.value;\n    setVolume(newVolume);\n    audioRef.current.volume = newVolume;\n  };\n  const playPrevious = () => {\n    setCurrentSongIndex(prev => prev === 0 ? songs.length - 1 : prev - 1);\n    setIsPlaying(true);\n    setTimeout(() => {\n      audioRef.current.play();\n    }, 100);\n  };\n  const playNext = () => {\n    setCurrentSongIndex(prev => prev === songs.length - 1 ? 0 : prev + 1);\n    setIsPlaying(true);\n    setTimeout(() => {\n      audioRef.current.play();\n    }, 100);\n  };\n\n  // Format time in MM:SS\n  const formatTime = time => {\n    if (isNaN(time)) return \"00:00\";\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  // Determine if player should be expanded based on screen width\n  const shouldExpand = windowWidth <= 576;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `audio-player-bar ${shouldExpand ? 'expanded' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audio-player-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"song-prefix\",\n          children: \"Acrotona:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), \" \", currentSong.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button\",\n          onClick: playPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-backward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-button\",\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-play\",\n            style: {\n              marginLeft: \"2px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button\",\n          onClick: playNext,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-forward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-display\",\n          children: [formatTime(currentTime), \" / \", formatTime(duration)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"volume-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-volume-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: volume,\n            onChange: handleVolumeChange,\n            className: \"volume-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      ref: progressBarRef,\n      onClick: handleProgress,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${currentTime / duration * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: currentSong.src,\n      onEnded: playNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"uAi4mHVzInfAZV77bPEAjSoPmGk=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","AudioPlayer","_s","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","volume","setVolume","windowWidth","setWindowWidth","window","innerWidth","currentSongIndex","setCurrentSongIndex","audioRef","progressBarRef","songs","title","artist","src","currentSong","handleResize","addEventListener","removeEventListener","audio","current","setAudioData","setAudioTime","togglePlay","pause","play","handleProgress","e","progressBar","percent","nativeEvent","offsetX","offsetWidth","newTime","handleVolumeChange","newVolume","target","value","playPrevious","prev","length","setTimeout","playNext","formatTime","time","isNaN","minutes","Math","floor","seconds","toString","padStart","shouldExpand","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginLeft","type","min","max","step","onChange","ref","width","onEnded","_c","$RefreshReg$"],"sources":["/Users/ovandef/Documents/GitHub/cfc2025/src/components/AudioPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './AudioPlayer.css';\n\nconst AudioPlayer = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(0.5);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  \n  const audioRef = useRef(null);\n  const progressBarRef = useRef(null);\n  \n  // Updated playlist with all songs from acrotona album\n  const songs = [\n    {\n      title: \"Bola a rolar\",\n      artist: \"Acrotona\",\n      src: \"/audio/albums/acrotona/Bola%20a%20rolar.mp3\"\n    },\n    {\n      title: \"Coração Tricolor\",\n      artist: \"Acrotona\",\n      src: \"/audio/albums/acrotona/Cora%C3%A7%C3%A3o%20Tricolor.mp3\"\n    },\n    {\n      title: \"1990\",\n      artist: \"Acrotona\",\n      src: \"/audio/albums/acrotona/1990.mp3\"\n    },\n    {\n      title: \"Campeões da Vila\",\n      artist: \"Acrotona\",\n      src: \"/audio/albums/acrotona/Campe%C3%B5es%20da%20Vila.mp3\"\n    },\n    {\n      title: \"Gritos da Torcida\",\n      artist: \"Acrotona\",\n      src: \"/audio/albums/acrotona/Gritos%20da%20Torcida.mp3\"\n    },\n    {\n      title: \"Mais Que Um Jogo\",\n      artist: \"Acrotona\",\n      src: \"/audio/albums/acrotona/Mais%20Que%20Um%20Jogo.mp3\"\n    },\n    {\n      title: \"Nossa Engrenagem\",\n      artist: \"Acrotona\",\n      src: \"/audio/albums/acrotona/Nossa%20Engrenagem.mp3\"\n    },\n    {\n      title: \"Velha Guarda\",\n      artist: \"Acrotona\",\n      src: \"/audio/albums/acrotona/Velha%20Guarda.mp3\"\n    }\n  ];\n  \n  const currentSong = songs[currentSongIndex];\n  \n  // Monitor window width to auto-expand on narrow screens\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  \n  useEffect(() => {\n    const audio = audioRef.current;\n    \n    const setAudioData = () => {\n      setDuration(audio.duration);\n      setCurrentTime(audio.currentTime);\n    };\n    \n    const setAudioTime = () => setCurrentTime(audio.currentTime);\n    \n    // Add event listeners\n    audio.addEventListener('loadeddata', setAudioData);\n    audio.addEventListener('timeupdate', setAudioTime);\n    \n    // Set volume\n    audio.volume = volume;\n    \n    // Cleanup\n    return () => {\n      audio.removeEventListener('loadeddata', setAudioData);\n      audio.removeEventListener('timeupdate', setAudioTime);\n    };\n  }, [currentSongIndex, volume]);\n  \n  const togglePlay = () => {\n    const audio = audioRef.current;\n    \n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    \n    setIsPlaying(!isPlaying);\n  };\n  \n  const handleProgress = (e) => {\n    const progressBar = progressBarRef.current;\n    const percent = (e.nativeEvent.offsetX / progressBar.offsetWidth);\n    const newTime = percent * duration;\n    \n    audioRef.current.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n  \n  const handleVolumeChange = (e) => {\n    const newVolume = e.target.value;\n    setVolume(newVolume);\n    audioRef.current.volume = newVolume;\n  };\n  \n  const playPrevious = () => {\n    setCurrentSongIndex(prev => (prev === 0 ? songs.length - 1 : prev - 1));\n    setIsPlaying(true);\n    setTimeout(() => {\n      audioRef.current.play();\n    }, 100);\n  };\n  \n  const playNext = () => {\n    setCurrentSongIndex(prev => (prev === songs.length - 1 ? 0 : prev + 1));\n    setIsPlaying(true);\n    setTimeout(() => {\n      audioRef.current.play();\n    }, 100);\n  };\n  \n  // Format time in MM:SS\n  const formatTime = (time) => {\n    if (isNaN(time)) return \"00:00\";\n    \n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    \n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  \n  // Determine if player should be expanded based on screen width\n  const shouldExpand = windowWidth <= 576;\n  \n  return (\n    <div className={`audio-player-bar ${shouldExpand ? 'expanded' : ''}`}>\n      <div className=\"audio-player-content\">\n        <div className=\"song-info\">\n          <span className=\"song-prefix\">Acrotona:</span> {currentSong.title}\n        </div>\n        \n        <div className=\"player-controls\">\n          <button className=\"control-button\" onClick={playPrevious}>\n            <i className=\"fas fa-backward\"></i>\n          </button>\n          \n          <button className=\"play-button\" onClick={togglePlay}>\n            {isPlaying ? (\n              <i className=\"fas fa-pause\"></i>\n            ) : (\n              <i className=\"fas fa-play\" style={{ marginLeft: \"2px\" }}></i>\n            )}\n          </button>\n          \n          <button className=\"control-button\" onClick={playNext}>\n            <i className=\"fas fa-forward\"></i>\n          </button>\n        </div>\n        \n        <div className=\"player-right\">\n          <div className=\"time-display\">\n            {formatTime(currentTime)} / {formatTime(duration)}\n          </div>\n          \n          <div className=\"volume-container\">\n            <i className=\"fas fa-volume-down\"></i>\n            <input \n              type=\"range\" \n              min=\"0\" \n              max=\"1\" \n              step=\"0.01\" \n              value={volume}\n              onChange={handleVolumeChange}\n              className=\"volume-slider\"\n            />\n          </div>\n        </div>\n      </div>\n      \n      <div \n        className=\"progress-bar\" \n        ref={progressBarRef}\n        onClick={handleProgress}\n      >\n        <div \n          className=\"progress\" \n          style={{ width: `${(currentTime / duration) * 100}%` }}\n        ></div>\n      </div>\n      \n      <audio \n        ref={audioRef}\n        src={currentSong.src}\n        onEnded={playNext}\n      />\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}